@model TestTask_V1336.Models.ViewModels.WellAllModel

@{
    ViewBag.Title = "Создание скважины";
}

<h2>Создание скважины</h2>


@using (Html.BeginForm("WellCreate", "Well", FormMethod.Post))
{
    @Html.ValidationSummary()
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
        @Html.LabelFor(model => model.ID, "Идентификатор", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Name, "Название скважины: ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Group, "Название куста: ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Group, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Field, "Название месторождения: ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Field, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Field, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Factory, "Название ЦДНГ: ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Factory, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Factory, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ControllerID, "Идентификатор установленного контроллера: ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ControllerID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ControllerID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OperTypes, "Тип эксплуатации:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.OperTypes, new SelectList(ViewBag.OperTypes), "", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OperTypes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-actions no-color">
        <input type="submit" value="Добавить" class="btn btn-success" /> |
        @Html.ActionLink("Отмена", "WellList", "Well")
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

